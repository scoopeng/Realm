plugins {
    id 'java'
    id 'application'
}

group = 'com.example'
version = '2.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mongodb:mongodb-driver-sync:5.2.1'
    implementation 'com.opencsv:opencsv:5.9'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'com.typesafe:config:1.4.3'
    
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

application {
    mainClass = 'com.example.mongoexport.AutoDiscoveryExporter'
}

test {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// ============================================
// TWO-PHASE EXPORT WORKFLOW - NEW!
// ============================================

// Phase 1: Discovery - Creates JSON configuration file
task discover(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.DiscoveryRunner'
    jvmArgs = ['-Xmx16g', '-Xms8g']
    doFirst {
        def collection = project.hasProperty('collection') ? project.property('collection') : 'listings'
        args = [collection]
    }
    description = '★ NEW Phase 1: Discovers all fields and creates editable JSON configuration in config/'
}

// Phase 2: Configuration-based Export
task configExport(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.ConfigExportRunner'
    jvmArgs = ['-Xmx24g', '-Xms16g']
    doFirst {
        def collection = project.hasProperty('collection') ? project.property('collection') : 'listings'
        args = [collection]
    }
    description = '★ NEW Phase 2: Exports using JSON configuration from config/ directory'
}

// ============================================
// LEGACY EXPORT TASKS - STILL AVAILABLE
// ============================================

// Original Auto-Discovery Export (All-in-one)
task autoDiscover(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.AutoDiscoveryExporter'
    jvmArgs = ['-Xmx24g', '-Xms16g']
    doFirst {
        def collection = project.hasProperty('collection') ? project.property('collection') : 'listings'
        args = [collection]
    }
    description = 'LEGACY: Original all-in-one discovery and export (use discover + configExport instead)'
}

// Legacy aliases
task filteredExport(dependsOn: autoDiscover) {
    description = 'LEGACY: Alias for autoDiscover'
}

task fullExport(dependsOn: autoDiscover) {
    description = 'LEGACY: Alias for autoDiscover'
}

task analyzeFields(dependsOn: autoDiscover) {
    description = 'LEGACY: Alias for autoDiscover'
}

// ============================================
// UTILITY TASKS
// ============================================
// All legacy tasks removed - use autoDiscover instead

// ============================================
// CONVENIENCE ALIASES
// ============================================

task export(dependsOn: autoDiscover) {
    description = 'LEGACY: Alias for autoDiscover'
}

// ============================================
// HELP TASK
// ============================================

task showHelp {
    doLast {
        println """
╔══════════════════════════════════════════════════════════════════════╗
║                    REALM MONGODB EXPORTER v2.0                       ║
╚══════════════════════════════════════════════════════════════════════╝

NEW TWO-PHASE WORKFLOW (Recommended):
─────────────────────────────────────
  Phase 1: Discovery
  ./gradlew discover -Pcollection=listings
    ★ Discovers all fields and creates an editable JSON configuration
    file in config/listings_fields.json

  Phase 2: Export
  ./gradlew configExport -Pcollection=listings  
    ★ Exports data using the JSON configuration from Phase 1
    (You can manually edit the JSON between phases!)

LEGACY ALL-IN-ONE COMMANDS:
───────────────────────────
  ./gradlew autoDiscover -Pcollection=listings
    Original single-phase discovery and export (still works)

COLLECTION OPTIONS:
──────────────────
  -Pcollection=listings     (default)
  -Pcollection=transactions
  -Pcollection=agents
  -Pcollection=all          (exports all three)
  -Pcollection=<any>        (any MongoDB collection name)

EXAMPLES:
─────────
  # NEW two-phase workflow:
  ./gradlew discover -Pcollection=listings
  # Edit config/listings_fields.json if needed
  ./gradlew configExport -Pcollection=listings
  
  # Legacy all-in-one:
  ./gradlew autoDiscover -Pcollection=transactions
  
  # Analyze agents collection:
  ./gradlew analyzeFields -Pcollection=agents
  
  # Export all collections:
  ./gradlew autoDiscover -Pcollection=all

KEY FEATURES:
────────────
  • Automatic field discovery - no hardcoded schemas
  • Business-readable column names
  • Intelligent filtering (>2 distinct values)
  • Works with ANY MongoDB collection
  • Future-proof - adapts to schema changes

OUTPUT:
──────
  Files are saved to: ./output/
  • CSV with data
  • JSON discovery report
  • Statistics summary
"""
    }
}

// Default task shows help
defaultTasks 'showHelp'