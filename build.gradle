plugins {
    id 'java'
    id 'application'
}

group = 'com.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    // MongoDB driver
    implementation 'org.mongodb:mongodb-driver-sync:5.2.1'
    
    // CSV processing
    implementation 'com.opencsv:opencsv:5.9'
    
    // Logging
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    
    // Configuration
    implementation 'com.typesafe:config:1.4.3'
    
    // Testing
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

application {
    mainClass = 'com.example.mongoexport.UltraListingsExporter'
}

// Production Tasks
task runUltraListings(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.UltraListingsExporter'
    jvmArgs = ['-Xmx20g', '-Xms10g']
    description = 'Export all listings with comprehensive fields (259 columns)'
}

task runUltraListingsCleaned(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.UltraListingsExporterCleaned'
    jvmArgs = ['-Xmx20g', '-Xms10g']
    description = 'Export all listings with cleaned fields (~192 columns, removed meaningless fields)'
}

task runUltraAgentPerformance(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.UltraAgentPerformanceExporter'
    jvmArgs = ['-Xmx20g', '-Xms10g']
    description = 'Export comprehensive agent performance metrics'
}

task runUltraTransaction(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.UltraTransactionExporter'
    jvmArgs = ['-Xmx20g', '-Xms10g']
    description = 'Export comprehensive transaction history with all joined data'
}

task runTestCityMapping(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.TestCityMapping'
    jvmArgs = ['-Xmx2g']
    description = 'Test city field mapping investigation'
}

task runTestBrokerageCity(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.TestBrokerageCityField'
    jvmArgs = ['-Xmx2g']
    description = 'Test brokerage city field investigation'
}

task runTestFieldValues(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.TestFieldValues'
    jvmArgs = ['-Xmx2g']
    description = 'Test field values for potential code lookups'
}

task runTestBinaryFields(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.TestBinaryFields'
    jvmArgs = ['-Xmx2g']
    description = 'Test for binary fields with only null/false values'
}

task runTestListingFeatures(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.TestListingFeatures'
    jvmArgs = ['-Xmx2g']
    description = 'Test listing feature boolean fields'
}

task runTestListingStructure(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.TestListingStructure'
    jvmArgs = ['-Xmx2g']
    description = 'Test listing document structure'
}

task runTestTransactionFields(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.TestTransactionFields'
    jvmArgs = ['-Xmx2g']
    description = 'Test transaction fields for foreign keys and empty values'
}

task runTestAgentFields(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.mongoexport.TestAgentFields'
    jvmArgs = ['-Xmx2g']
    description = 'Test agent fields for foreign keys and empty values'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec) {
    systemProperty 'file.encoding', 'UTF-8'
}

test {
    useJUnitPlatform()
}